{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/preload.ts","webpack:///./src/renderer/event.ts","webpack:///./src/renderer/index.ts","webpack:///external \"electron\""],"names":["location","href","startsWith","injectExtensionAPIs","formatIpcName","name","listenerMap","Map","addExtensionListener","extensionId","callback","listenerCount","get","ipcRenderer","send","set","addListener","event","args","process","console","log","removeExtensionListener","has","delete","removeListener","invokeExtension","fnName","options","length","pop","undefined","noop","warn","serialize","result","invoke","e","error","electronContext","mainWorldScript","electron","window","chrome","runtime","id","manifest","getManifest","opts","imageData2base64","imageData","canvas","document","createElement","ctx","getContext","width","height","putImageData","toDataURL","ExtensionEvent","constructor","getRules","ruleIdentifiers","Error","hasListener","removeRules","addRules","rules","hasListeners","ChromeSetting","clear","apiDefinitions","browserAction","shouldInject","browser_action","factory","base","api","setTitle","getTitle","setIcon","details","ImageData","Object","entries","reduce","obj","pair","setPopup","getPopup","setBadgeText","getBadgeText","setBadgeBackgroundColor","getBadgeBackgroundColor","enable","disable","onClicked","commands","getAll","onCommand","contextMenus","menuCounter","menuCallbacks","menuCreate","hasInternalListener","addInternalListener","info","tab","menuItemId","create","createProperties","onclick","update","remove","removeAll","cookies","getAllCookieStores","onChanged","extension","isAllowedIncognitoAccess","notifications","getPermissionLevel","onButtonClicked","onClosed","privacy","network","networkPredictionEnabled","webRTCIPHandlingPolicy","websites","hyperlinkAuditingEnabled","openOptionsPage","storage","local","managed","sync","tabs","executeScript","arg1","arg2","arg3","query","active","windowId","windows","WINDOW_ID_CURRENT","activeTab","getCurrent","getAllInWindow","insertCSS","reload","goBack","goForward","onCreated","onRemoved","onUpdated","onActivated","webNavigation","getFrame","getAllFrames","onBeforeNavigate","onCommitted","onCompleted","onCreatedNavigationTarget","onDOMContentLoaded","onErrorOccurred","onHistoryStateUpdated","onReferenceFragmentUpdated","onTabReplaced","webRequest","onHeadersReceived","WINDOW_ID_NONE","getLastFocused","onFocusChanged","keys","forEach","key","apiName","baseApi","defineProperty","value","enumerable","configurable","freeze","contextBridge","exposeInMainWorld","webFrame","executeJavaScript"],"mappings":"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","file":"preload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/preload.ts\");\n","import { injectExtensionAPIs } from './renderer'\n\n// Only load within extension page context\nif (location.href.startsWith('chrome-extension://')) {\n  injectExtensionAPIs()\n}\n","import { ipcRenderer } from 'electron'\n\nconst formatIpcName = (name: string) => `crx-${name}`\n\nconst listenerMap = new Map<string, number>()\n\nexport const addExtensionListener = (extensionId: string, name: string, callback: Function) => {\n  const listenerCount = listenerMap.get(name) || 0\n\n  if (listenerCount === 0) {\n    // TODO: should these IPCs be batched in a microtask?\n    ipcRenderer.send('crx-add-listener', extensionId, name)\n  }\n\n  listenerMap.set(name, listenerCount + 1)\n\n  ipcRenderer.addListener(formatIpcName(name), function (event, ...args) {\n    if (process.env.NODE_ENV === 'development') {\n      console.log(name, '(result)', ...args)\n    }\n    callback(...args)\n  })\n}\n\nexport const removeExtensionListener = (extensionId: string, name: string, callback: any) => {\n  if (listenerMap.has(name)) {\n    const listenerCount = listenerMap.get(name) || 0\n\n    if (listenerCount <= 1) {\n      listenerMap.delete(name)\n\n      ipcRenderer.send('crx-remove-listener', extensionId, name)\n    } else {\n      listenerMap.set(name, listenerCount - 1)\n    }\n  }\n\n  ipcRenderer.removeListener(formatIpcName(name), callback)\n}\n","import { ipcRenderer, contextBridge, webFrame } from 'electron'\nimport { addExtensionListener, removeExtensionListener } from './event'\n\nexport const injectExtensionAPIs = () => {\n  interface ExtensionMessageOptions {\n    noop?: boolean\n    serialize?: (...args: any[]) => any[]\n  }\n\n  const invokeExtension = async function (\n    extensionId: string,\n    fnName: string,\n    options: ExtensionMessageOptions = {},\n    ...args: any[]\n  ) {\n    const callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log(fnName, args)\n    }\n\n    if (options.noop) {\n      console.warn(`${fnName} is not yet implemented.`)\n      if (callback) callback()\n      return\n    }\n\n    if (options.serialize) {\n      args = options.serialize(...args)\n    }\n\n    let result\n\n    try {\n      result = await ipcRenderer.invoke('crx-msg', extensionId, fnName, ...args)\n    } catch (e) {\n      // TODO: Set chrome.runtime.lastError?\n      console.error(e)\n      result = undefined\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log(fnName, '(result)', result)\n    }\n\n    if (callback) {\n      callback(result)\n    } else {\n      return result\n    }\n  }\n\n  const electronContext = {\n    invokeExtension,\n    addExtensionListener,\n    removeExtensionListener,\n  }\n\n  // Function body to run in the main world.\n  // IMPORTANT: This must be self-contained, no closure variable will be included!\n  function mainWorldScript() {\n    // Use context bridge API or closure variable when context isolation is disabled.\n    const electron = ((window as any).electron as typeof electronContext) || electronContext\n\n    const chrome = window.chrome || {}\n    const extensionId = chrome.runtime?.id\n\n    // NOTE: This uses a synchronous IPC to get the extension manifest.\n    // To avoid this, JS bindings for RendererExtensionRegistry would be\n    // required.\n    const manifest: chrome.runtime.Manifest =\n      (extensionId && chrome.runtime.getManifest()) || ({} as any)\n\n    const invokeExtension =\n      (fnName: string, opts: ExtensionMessageOptions = {}) =>\n      (...args: any[]) =>\n        electron.invokeExtension(extensionId, fnName, opts, ...args)\n\n    function imageData2base64(imageData: ImageData) {\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      if (!ctx) return null\n\n      canvas.width = imageData.width\n      canvas.height = imageData.height\n      ctx.putImageData(imageData, 0, 0)\n\n      return canvas.toDataURL()\n    }\n\n    class ExtensionEvent<T extends Function> implements chrome.events.Event<T> {\n      constructor(private name: string) {}\n\n      addListener(callback: T) {\n        electron.addExtensionListener(extensionId, this.name, callback)\n      }\n      removeListener(callback: T) {\n        electron.removeExtensionListener(extensionId, this.name, callback)\n      }\n\n      getRules(callback: (rules: chrome.events.Rule[]) => void): void\n      getRules(ruleIdentifiers: string[], callback: (rules: chrome.events.Rule[]) => void): void\n      getRules(ruleIdentifiers: any, callback?: any) {\n        throw new Error('Method not implemented.')\n      }\n      hasListener(callback: T): boolean {\n        throw new Error('Method not implemented.')\n      }\n      removeRules(ruleIdentifiers?: string[] | undefined, callback?: (() => void) | undefined): void\n      removeRules(callback?: (() => void) | undefined): void\n      removeRules(ruleIdentifiers?: any, callback?: any) {\n        throw new Error('Method not implemented.')\n      }\n      addRules(\n        rules: chrome.events.Rule[],\n        callback?: ((rules: chrome.events.Rule[]) => void) | undefined\n      ): void {\n        throw new Error('Method not implemented.')\n      }\n      hasListeners(): boolean {\n        throw new Error('Method not implemented.')\n      }\n    }\n\n    class ChromeSetting implements Partial<chrome.types.ChromeSetting> {\n      set() {}\n      get() {}\n      clear() {}\n      // onChange: chrome.types.ChromeSettingChangedEvent\n    }\n\n    type DeepPartial<T> = {\n      [P in keyof T]?: DeepPartial<T[P]>\n    }\n\n    type APIFactoryMap = {\n      [apiName in keyof typeof chrome]: {\n        shouldInject?: () => boolean\n        factory: (base: DeepPartial<typeof chrome[apiName]>) => DeepPartial<typeof chrome[apiName]>\n      }\n    }\n\n    /**\n     * Factories for each additional chrome.* API.\n     */\n    const apiDefinitions: Partial<APIFactoryMap> = {\n      browserAction: {\n        shouldInject: () => !!manifest.browser_action,\n        factory: (base) => {\n          const api = {\n            ...base,\n\n            setTitle: invokeExtension('browserAction.setTitle'),\n            getTitle: invokeExtension('browserAction.getTitle'),\n\n            setIcon: invokeExtension('browserAction.setIcon', {\n              serialize: (details: any) => {\n                if (details.imageData) {\n                  if (details.imageData instanceof ImageData) {\n                    details.imageData = imageData2base64(details.imageData)\n                  } else {\n                    details.imageData = Object.entries(details.imageData).reduce(\n                      (obj: any, pair: any[]) => {\n                        obj[pair[0]] = imageData2base64(pair[1])\n                        return obj\n                      },\n                      {}\n                    )\n                  }\n                }\n\n                return [details]\n              },\n            }),\n\n            setPopup: invokeExtension('browserAction.setPopup'),\n            getPopup: invokeExtension('browserAction.getPopup'),\n\n            setBadgeText: invokeExtension('browserAction.setBadgeText'),\n            getBadgeText: invokeExtension('browserAction.getBadgeText'),\n\n            setBadgeBackgroundColor: invokeExtension('browserAction.setBadgeBackgroundColor'),\n            getBadgeBackgroundColor: invokeExtension('browserAction.getBadgeBackgroundColor'),\n\n            enable: invokeExtension('browserAction.enable', { noop: true }),\n            disable: invokeExtension('browserAction.disable', { noop: true }),\n\n            onClicked: new ExtensionEvent('browserAction.onClicked'),\n          }\n\n          return api\n        },\n      },\n\n      commands: {\n        factory: (base) => {\n          return {\n            ...base,\n            getAll: invokeExtension('commands.getAll'),\n            onCommand: new ExtensionEvent('commands.onCommand'),\n          }\n        },\n      },\n\n      contextMenus: {\n        factory: (base) => {\n          let menuCounter = 0\n          const menuCallbacks: {\n            [key: string]: chrome.contextMenus.CreateProperties['onclick']\n          } = {}\n          const menuCreate = invokeExtension('contextMenus.create')\n\n          let hasInternalListener = false\n          const addInternalListener = () => {\n            api.onClicked.addListener((info, tab) => {\n              const callback = menuCallbacks[info.menuItemId]\n              if (callback && tab) callback(info, tab)\n            })\n            hasInternalListener = true\n          }\n\n          const api = {\n            ...base,\n            create: function (\n              createProperties: chrome.contextMenus.CreateProperties,\n              callback?: Function\n            ) {\n              if (typeof createProperties.id === 'undefined') {\n                createProperties.id = `${++menuCounter}`\n              }\n              if (createProperties.onclick) {\n                if (!hasInternalListener) addInternalListener()\n                menuCallbacks[createProperties.id] = createProperties.onclick\n                delete createProperties.onclick\n              }\n              menuCreate(createProperties, callback)\n              return createProperties.id\n            },\n            update: invokeExtension('contextMenus.update', { noop: true }),\n            remove: invokeExtension('contextMenus.remove'),\n            removeAll: invokeExtension('contextMenus.removeAll'),\n            onClicked: new ExtensionEvent<\n              (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => void\n            >('contextMenus.onClicked'),\n          }\n\n          return api\n        },\n      },\n\n      cookies: {\n        factory: (base) => {\n          return {\n            ...base,\n            get: invokeExtension('cookies.get'),\n            getAll: invokeExtension('cookies.getAll'),\n            set: invokeExtension('cookies.set'),\n            remove: invokeExtension('cookies.remove'),\n            getAllCookieStores: invokeExtension('cookies.getAllCookieStores'),\n            onChanged: new ExtensionEvent('cookies.onChanged'),\n          }\n        },\n      },\n\n      extension: {\n        factory: (base) => {\n          return {\n            ...base,\n            isAllowedIncognitoAccess: () => false,\n          }\n        },\n      },\n\n      notifications: {\n        factory: (base) => {\n          return {\n            ...base,\n            clear: invokeExtension('notifications.clear'),\n            create: invokeExtension('notifications.create'),\n            getAll: invokeExtension('notifications.getAll'),\n            getPermissionLevel: invokeExtension('notifications.getPermissionLevel'),\n            update: invokeExtension('notifications.update'),\n            onClicked: new ExtensionEvent('notifications.onClicked'),\n            onButtonClicked: new ExtensionEvent('notifications.onButtonClicked'),\n            onClosed: new ExtensionEvent('notifications.onClosed'),\n          }\n        },\n      },\n\n      privacy: {\n        factory: (base) => {\n          return {\n            ...base,\n            network: {\n              networkPredictionEnabled: new ChromeSetting(),\n              webRTCIPHandlingPolicy: new ChromeSetting(),\n            },\n            websites: {\n              hyperlinkAuditingEnabled: new ChromeSetting(),\n            },\n          }\n        },\n      },\n\n      runtime: {\n        factory: (base) => {\n          return {\n            ...base,\n            openOptionsPage: invokeExtension('runtime.openOptionsPage'),\n          }\n        },\n      },\n\n      storage: {\n        factory: (base) => {\n          const local = base && base.local\n          return {\n            ...base,\n            // TODO: provide a backend for browsers to opt-in to\n            managed: local,\n            sync: local,\n          }\n        },\n      },\n\n      tabs: {\n        factory: (base) => {\n          const api = {\n            ...base,\n            create: invokeExtension('tabs.create'),\n            executeScript: function (arg1: unknown, arg2: unknown, arg3: unknown) {\n              // Electron's implementation of chrome.tabs.executeScript is in\n              // C++, but it doesn't support implicit execution in the active\n              // tab. To handle this, we need to get the active tab ID and\n              // pass it into the C++ implementation ourselves.\n              if (typeof arg1 === 'object') {\n                api.query(\n                  { active: true, windowId: chrome.windows.WINDOW_ID_CURRENT },\n                  ([activeTab]: chrome.tabs.Tab[]) => {\n                    api.executeScript(activeTab.id, arg1, arg2)\n                  }\n                )\n              } else {\n                ;(base.executeScript as typeof chrome.tabs.executeScript)(\n                  arg1 as number,\n                  arg2 as chrome.tabs.InjectDetails,\n                  arg3 as () => {}\n                )\n              }\n            },\n            get: invokeExtension('tabs.get'),\n            getCurrent: invokeExtension('tabs.getCurrent'),\n            getAllInWindow: invokeExtension('tabs.getAllInWindow'),\n            insertCSS: invokeExtension('tabs.insertCSS'),\n            query: invokeExtension('tabs.query'),\n            reload: invokeExtension('tabs.reload'),\n            update: invokeExtension('tabs.update'),\n            remove: invokeExtension('tabs.remove'),\n            goBack: invokeExtension('tabs.goBack'),\n            goForward: invokeExtension('tabs.goForward'),\n            onCreated: new ExtensionEvent('tabs.onCreated'),\n            onRemoved: new ExtensionEvent('tabs.onRemoved'),\n            onUpdated: new ExtensionEvent('tabs.onUpdated'),\n            onActivated: new ExtensionEvent('tabs.onActivated'),\n          }\n          return api\n        },\n      },\n\n      webNavigation: {\n        factory: (base) => {\n          return {\n            ...base,\n            getFrame: invokeExtension('webNavigation.getFrame'),\n            getAllFrames: invokeExtension('webNavigation.getAllFrames'),\n            onBeforeNavigate: new ExtensionEvent('webNavigation.onBeforeNavigate'),\n            onCommitted: new ExtensionEvent('webNavigation.onCommitted'),\n            onCompleted: new ExtensionEvent('webNavigation.onCompleted'),\n            onCreatedNavigationTarget: new ExtensionEvent(\n              'webNavigation.onCreatedNavigationTarget'\n            ),\n            onDOMContentLoaded: new ExtensionEvent('webNavigation.onDOMContentLoaded'),\n            onErrorOccurred: new ExtensionEvent('webNavigation.onErrorOccurred'),\n            onHistoryStateUpdated: new ExtensionEvent('webNavigation.onHistoryStateUpdated'),\n            onReferenceFragmentUpdated: new ExtensionEvent(\n              'webNavigation.onReferenceFragmentUpdated'\n            ),\n            onTabReplaced: new ExtensionEvent('webNavigation.onTabReplaced'),\n          }\n        },\n      },\n\n      webRequest: {\n        factory: (base) => {\n          return {\n            ...base,\n            onHeadersReceived: new ExtensionEvent('webRequest.onHeadersReceived'),\n          }\n        },\n      },\n\n      windows: {\n        factory: (base) => {\n          return {\n            ...base,\n            WINDOW_ID_NONE: -1,\n            WINDOW_ID_CURRENT: -2,\n            get: invokeExtension('windows.get'),\n            getLastFocused: invokeExtension('windows.getLastFocused'),\n            getAll: invokeExtension('windows.getAll'),\n            create: invokeExtension('windows.create'),\n            update: invokeExtension('windows.update'),\n            remove: invokeExtension('windows.remove'),\n            onCreated: new ExtensionEvent('windows.onCreated'),\n            onRemoved: new ExtensionEvent('windows.onRemoved'),\n            onFocusChanged: new ExtensionEvent('windows.onFocusChanged'),\n          }\n        },\n      },\n    }\n\n    // Initialize APIs\n    Object.keys(apiDefinitions).forEach((key: any) => {\n      const apiName: keyof typeof chrome = key\n      const baseApi = chrome[apiName] as any\n      const api = apiDefinitions[apiName]!\n\n      // Allow APIs to opt-out of being available in this context.\n      if (api.shouldInject && !api.shouldInject()) return\n\n      Object.defineProperty(chrome, apiName, {\n        value: api.factory(baseApi),\n        enumerable: true,\n        configurable: true,\n      })\n    })\n\n    // Remove access to internals\n    delete (window as any).electron\n\n    Object.freeze(chrome)\n\n    void 0 // no return\n  }\n\n  try {\n    // Expose extension IPC to main world\n    contextBridge.exposeInMainWorld('electron', electronContext)\n\n    // Mutate global 'chrome' object with additional APIs in the main world.\n    webFrame.executeJavaScript(`(${mainWorldScript}());`)\n  } catch {\n    // contextBridge threw an error which means we're in the main world so we\n    // can just execute our function.\n    mainWorldScript()\n  }\n}\n","module.exports = require(\"electron\");"],"sourceRoot":""}